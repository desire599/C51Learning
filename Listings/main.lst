C51 COMPILER V9.60.0.0   MAIN                                                              11/18/2020 11:13:27 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Keil_v5\C51\BIN\C51.EXE src\main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTE
                    -ND PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          //程序：任务5-7-6个数码管进行24小时计时
   2          //功能：六个动态数码管共阴极接法，定时器采用中断方式
   3          #include "reg51.h" //包含头文件reg51.h，定义了51单片机的专用寄存器
   4          //全局变量定义
   5          unsigned char count = 0; //对50ms定时时间进行计数
   6          unsigned char sec = 0;   //秒计数变量
   7          unsigned char min = 0;   //分计数变量
   8          unsigned char hour = 0;  //小时计数变量
   9          
  10          //函数名：timer_1()
  11          //函数功能：定时器T1中断函数，假设T1在工作方式1下每50ms产生中断，执行该中断函数
  12          //形式参数：无
  13          //返回值：无
  14          void timer_1() interrupt 3 //（5）编写中断服务程序，T1的中断类型号为3
  15          {
  16   1          count++;                    //50ms计数器加1
  17   1          TH1 = (65536 - 5000) / 256; //重新设置T1计数初值高8位
  18   1          TL1 = (65536 - 5000) % 256; //重新设置T1计数初值低8位
  19   1          if (count == 20)            //1s时间到
  20   1          {
  21   2              count = 0; //50ms计数器清0
  22   2              sec++;     //秒计数器加1
  23   2              if (sec == 60)
  24   2              {
  25   3                  sec = 0; //sec计数到60，则从0开始计数
  26   3                  min++;  //此时分钟min计数加1
  27   3                  if (min == 60)
  28   3                  {
  29   4                    min = 0;
  30   4                    hour++; //此时小时hour计数加1
  31   4                    if (hour == 24)
  32   4                    {
  33   5                      hour = 0;
  34   5                    }
  35   4                  }
  36   3              
  37   3              }
  38   2      
  39   2          }
  40   1      }
  41          
  42          //函数名：disp()
  43          //函数功能：将数组显示在六个动态连接的数码管上，采用共阴极接法，方便使用“P口的低电平有效”原则
  44          //形式参数：无，由于需要3个变量的显示，秒、分、时，所以可以采用无参写法
  45          //返回值：无
  46          
  47          void disp() //由于涉及三个变量，可用无参写法，直接使用该三个全局变量。当然也可以同时定义三个形参。
  48          {
  49   1          unsigned char j;
  50   1          unsigned char code led[] = {0x3f, 0x06, 0x5b, 0x4f, 0x66, 0x6d, 0x7d, 0x07, 0x7f, 0x6f};
  51   1          //定义0～9显示码，共阴极数码管
  52   1          //由于需要接6个数码管，重新接线，P2的值有改变
  53   1          //依次为秒的个位，秒的十位，分钟的个位，分钟的十位，小时的个位，小时的十位
  54   1          /*1、秒部分的两位数显示。*/
C51 COMPILER V9.60.0.0   MAIN                                                              11/18/2020 11:13:27 PAGE 2   

  55   1          P2 = 0xff;
  56   1          P1 = led[sec % 10]; //显示秒sec个位，取余数放在右起第1个数码管
  57   1          P2 = 0xfe;          //只打开第1个数码管,P2.0 P2=1111 1110=0xfe
  58   1          for (j = 0; j < 50; j++);               //空运算100次，延时约1ms
  59   1          P2 = 0xff;          //关闭6个数码管
  60   1          P1 = led[sec / 10]; //显示秒sec十位，除法后的商放在右起第2个数码管
  61   1          P2 = 0xfd;          //只打开第2个数码管,P2.1 P2=1111 1101=0xfd
  62   1          for (j = 0; j < 50; j++); //空运算100次，延时约1ms
  63   1          /*2、分钟部分的两位数显示。*/
  64   1          P2 = 0xff;
  65   1          P1 = led[min % 10]; //显示分min个位，取余数放在右起第3个数码管
  66   1          P2 = 0xfb;          //只打开第3个数码管,P2.2 P2=1111 1011
  67   1          for (j = 0; j < 50; j++);               //空运算100次，延时约1ms
  68   1          P2 = 0xff;          //关闭6个数码管
  69   1          P1 = led[min / 10]; //显示分min十位，除法后的商放在右起第4个数码管
  70   1          P2 = 0xf7;          //只打开第4个数码管,P2.3 P2=1111 0111
  71   1          for (j = 0; j < 50; j++); //空运算100次，延时约1ms
  72   1          /*3、小时部分的两位数显示。*/
  73   1          P2 = 0xff;
  74   1          P1 = led[hour % 10]; //显示小时hour个位，取余数放在右起第5个数码管
  75   1          P2 = 0xef;           //只打开第5个数码管,P2.4 P2=1110 1111
  76   1          for (j = 0; j < 50; j++);                //空运算100次，延时约1ms
  77   1          P2 = 0xff;           //关闭6个数码管
  78   1          P1 = led[hour / 10]; //显示小时hour十位，除法后的商放在右起第6个数码管
  79   1          P2 = 0xdf;           //只打开第6个数码管,P2.5 P2=1101 1111
  80   1          for (j = 0; j < 50; j++); //空运算100次，延时约1ms
  81   1      }
  82          
  83          void main() //主函数
  84          {
  85   1          TMOD = 0x10;                 //（1）设置T1为工作方式1
  86   1          TH1 = (65536 - 50000) / 256; //（2）设置T1计数初值高8位，定时时间50ms
  87   1          TL1 = (65536 - 50000) % 256; //（2）设置T1计数初值低8位
  88   1          EA = 1;                      //（3）开放总中断允许
  89   1          ET1 = 1;                     //（3）开放T1中断允许
  90   1          TR1 = 1;                     //（4）启动T1开始计数
  91   1          while (1)
  92   1          {
  93   2              disp(); //调用显示函数
  94   2          }
  95   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    276    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
